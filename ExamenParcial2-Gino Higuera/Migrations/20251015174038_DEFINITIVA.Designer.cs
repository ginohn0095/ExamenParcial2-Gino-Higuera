// <auto-generated />
using System;
using ExamenParcial2_Gino_Higuera.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamenParcial2_Gino_Higuera.Migrations
{
    [DbContext(typeof(AplicacionDbContext))]
    [Migration("20251015174038_DEFINITIVA")]
    partial class DEFINITIVA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.21");

            modelBuilder.Entity("ExamenParcial2_Gino_Higuera.Models.Cita", b =>
                {
                    b.Property<int>("CitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("PacienteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CitaId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Citas");

                    b.HasData(
                        new
                        {
                            CitaId = 1,
                            DoctorId = 1,
                            Estado = "Pendiente",
                            Fecha = new DateTime(2025, 10, 16, 11, 40, 38, 460, DateTimeKind.Local).AddTicks(1987),
                            PacienteId = 1
                        },
                        new
                        {
                            CitaId = 2,
                            DoctorId = 1,
                            Estado = "Confirmada",
                            Fecha = new DateTime(2025, 10, 17, 11, 40, 38, 460, DateTimeKind.Local).AddTicks(2002),
                            PacienteId = 2
                        },
                        new
                        {
                            CitaId = 3,
                            DoctorId = 2,
                            Estado = "Cancelada",
                            Fecha = new DateTime(2025, 10, 18, 11, 40, 38, 460, DateTimeKind.Local).AddTicks(2003),
                            PacienteId = 3
                        },
                        new
                        {
                            CitaId = 4,
                            DoctorId = 2,
                            Estado = "Pendiente",
                            Fecha = new DateTime(2025, 10, 19, 11, 40, 38, 460, DateTimeKind.Local).AddTicks(2004),
                            PacienteId = 4
                        },
                        new
                        {
                            CitaId = 5,
                            DoctorId = 3,
                            Estado = "Confirmada",
                            Fecha = new DateTime(2025, 10, 20, 11, 40, 38, 460, DateTimeKind.Local).AddTicks(2005),
                            PacienteId = 5
                        },
                        new
                        {
                            CitaId = 6,
                            DoctorId = 3,
                            Estado = "Pendiente",
                            Fecha = new DateTime(2025, 10, 21, 11, 40, 38, 460, DateTimeKind.Local).AddTicks(2006),
                            PacienteId = 1
                        },
                        new
                        {
                            CitaId = 7,
                            DoctorId = 2,
                            Estado = "Confirmada",
                            Fecha = new DateTime(2025, 10, 22, 11, 40, 38, 460, DateTimeKind.Local).AddTicks(2008),
                            PacienteId = 2
                        },
                        new
                        {
                            CitaId = 8,
                            DoctorId = 1,
                            Estado = "Cancelada",
                            Fecha = new DateTime(2025, 10, 23, 11, 40, 38, 460, DateTimeKind.Local).AddTicks(2009),
                            PacienteId = 3
                        },
                        new
                        {
                            CitaId = 9,
                            DoctorId = 3,
                            Estado = "Pendiente",
                            Fecha = new DateTime(2025, 10, 24, 11, 40, 38, 460, DateTimeKind.Local).AddTicks(2010),
                            PacienteId = 4
                        },
                        new
                        {
                            CitaId = 10,
                            DoctorId = 2,
                            Estado = "Confirmada",
                            Fecha = new DateTime(2025, 10, 25, 11, 40, 38, 460, DateTimeKind.Local).AddTicks(2011),
                            PacienteId = 5
                        });
                });

            modelBuilder.Entity("ExamenParcial2_Gino_Higuera.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Especialidad")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctores");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            Especialidad = "Cardiología",
                            Nombre = "Dr. Smith"
                        },
                        new
                        {
                            DoctorId = 2,
                            Especialidad = "Pediatría",
                            Nombre = "Dr. Johnson"
                        },
                        new
                        {
                            DoctorId = 3,
                            Especialidad = "Dermatología",
                            Nombre = "Dr. Brown"
                        });
                });

            modelBuilder.Entity("ExamenParcial2_Gino_Higuera.Models.Paciente", b =>
                {
                    b.Property<int?>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("PacienteId");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            PacienteId = 1,
                            Apellido = "Perez",
                            Nombre = "Juan"
                        },
                        new
                        {
                            PacienteId = 2,
                            Apellido = "Lopez",
                            Nombre = "Maria"
                        },
                        new
                        {
                            PacienteId = 3,
                            Apellido = "Sanchez",
                            Nombre = "Carlos"
                        },
                        new
                        {
                            PacienteId = 4,
                            Apellido = "Martinez",
                            Nombre = "Ana"
                        },
                        new
                        {
                            PacienteId = 5,
                            Apellido = "Gomez",
                            Nombre = "Luis"
                        });
                });

            modelBuilder.Entity("ExamenParcial2_Gino_Higuera.Models.Cita", b =>
                {
                    b.HasOne("ExamenParcial2_Gino_Higuera.Models.Doctor", "Doctor")
                        .WithMany("Citas")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamenParcial2_Gino_Higuera.Models.Paciente", "Paciente")
                        .WithMany("Citas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("ExamenParcial2_Gino_Higuera.Models.Doctor", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("ExamenParcial2_Gino_Higuera.Models.Paciente", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
